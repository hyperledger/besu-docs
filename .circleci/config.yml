---
version: 2.1
executors:
  python_executor:
    docker:
      - image: cimg/python:3.9
  node_executor:
    docker:
      - image: cimg/node:lts
  shell_executor:
    docker:
      - image: cimg/base:2022.06

commands:
  install_node:
    description: "Install Node dependencies"
    steps:
      - restore_cache:
          keys:
            - deps-{{ checksum ".circleci/config.yml" }}-{{ checksum "package-lock.json" }}
      - run:
          name: Install dependencies
          command: |
            npm ci

  save_node_cache:
    description: "Save Node dependencies"
    steps:
      - save_cache:
          paths:
            - ./node_modules
          key: deps-{{ checksum ".circleci/config.yml" }}-{{ checksum "package-lock.json" }}

jobs:
  dco:
    executor: shell_executor
    steps:
      - checkout
      - run:
          name: check
          command: |
            status=0
            while IFS= read -r -a line; do
              my_array+=( "$line" )
              done < <( git branch -r | grep -v origin/HEAD )
            for branch in "${my_array[@]}"
            do
              branch=$(echo "$branch" | xargs)
              echo "Checking commits in branch $branch for commits missing DCO..."
              while read -r results; do
                status=1
                commit_hash="$(echo "$results" | cut -d' ' -f1)"
                >&2 echo "$commit_hash is missing Signed-off-by line."
              done < <(git log "$branch" --no-merges --pretty="%H %ae" --grep 'Signed-off-by' --invert-grep -- )
            done
            exit $status

  # test the build with regular non-insider MkDocs Material theme for compatibility
  build:
    executor: python_executor
    steps:
      - checkout
      - restore_cache:
          keys:
            - deps-{{ checksum ".circleci/config.yml" }}-{{ checksum "CI/requirements.txt" }}
      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install --upgrade pip
            pip install -q -r CI/requirements-mkdocs-material.txt -r CI/requirements.txt
      - save_cache:
          paths:
            - ./venv
          key: deps-{{ checksum ".circleci/config.yml" }}-{{ checksum "CI/requirements.txt" }}
      - run:
          name: Run MkDocs
          command: |
            . venv/bin/activate
            mkdocs build -s

  vale:
    executor: python_executor
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: |
            wget https://github.com/errata-ai/vale/releases/download/v2.6.0/vale_2.6.0_Linux_64-bit.tar.gz
            mkdir bin && tar -xvzf vale_2.6.0_Linux_64-bit.tar.gz -C bin vale
      - run:
          name: Run Vale
          command: |
            ./bin/vale --config ./CI/vale/.vale.ini --glob='*.{md}' . | tee ./vale.out
      - store_artifacts:
          path: ./vale.out
          destination: ./vale.out

  linkchecker:
    executor: node_executor
    steps:
      - checkout
      - install_node
      - run:
          name: Run markdown link checker
          command: |
            npm run test:links
      - save_node_cache
      - store_artifacts:
          path: ./linkchecker.out
          destination: linkchecker.out

  markdownlint:
    executor: node_executor
    steps:
      - checkout
      - install_node
      - run:
          shell: /bin/bash #this is a non breaking command so it will always return success
          name: Run Markdownlint info checks
          command: |
            npm run test:markdown:info
      - run:
          name: Run Markdownlint
          command: |
            npm run test:markdown
      - save_node_cache
      - store_artifacts:
          path: ./markdownlint.out
          destination: ./markdownlint.out
      - store_artifacts:
          path: ./markdownlint_info.out
          destination: ./markdownlint_info.out

  repolint:
    executor: node_executor
    steps:
      - checkout
      - install_node
      - run:
          shell: /bin/bash #this is a non breaking command so it will always return success
          name: Run repolinter
          command: |
            npm run lint:repo
      - save_node_cache

workflows:
  version: 2
  default:
    jobs:
      - dco
      - build
      - vale
      - markdownlint
      - linkchecker
      - repolint

  nightly:
    triggers:
      - schedule: # GMT
          cron: "0 0 * * *"
          filters:
            branches:
              only:
                - main
    jobs:
      - linkchecker

  weekly:
    triggers:
      - schedule:
          cron: "0 0 * * 0"
          filters:
            branches:
              only:
                - main
    jobs:
      - repolint
